# This file contains shared shell configuration which can be used
# both with zsh and bash. This content can also be used with oh-my-zsh.

# Source perlbrew if installed
[ -f "$HOME/perl5/perlbrew/etc/bashrc" ] && . "$HOME/perl5/perlbrew/etc/bashrc"

# Source ghcup for Haskell
[ -f "$HOME/.ghcup/env" ] && . "$HOME/.ghcup/env"

# The next line updates PATH for the Google Cloud SDK.
if [ -f "${HOME}/google-cloud-sdk/path.$(basename ${SHELL}).inc" ]; then . "${HOME}/google-cloud-sdk/path.$(basename ${SHELL}).inc"; fi

# The next line enables shell command completion for gcloud.
if [ -f "${HOME}/google-cloud-sdk/completion.$(basename ${SHELL}).inc" ]; then . "${HOME}/google-cloud-sdk/completion.$(basename ${SHELL}).inc"; fi

# Try to use colors no matter what
export CLICOLOR=1;
export LSCOLORS=ExGxBxDxCxEgEdxbxgxcxd;
export LS_OPTIONS='--color=auto'
export COLORTERM=truecolor

# Support GPG signing
export GPG_TTY=$(tty)

if [ "$(exa -v 2> /dev/null)" ]; then
    alias l="exa -lh"
    alias lr="exa -lh --sort newest"
else
    alias l="ls -lh"
    alias lr="ls -lrth"
fi

[ "$(nvim -v 2> /dev/null)" ] && \
    alias vi="nvim" && \
    alias vim="nvim"

[ "$(npm --version 2> /dev/null)" ] && PATH="$PATH:$(npm bin)"

export NPM_PACKAGES="$HOME/.npm"
export NPM_CONFIG_PREFIX="$NPM_PACKAGES"

export HISTCONTROL="ignoreboth"
export HISTSIZE=1000
export HISTFILESIZE=2000

export LESS="-+F"
export EDITOR="nvim"
export VISUAL="nvim"

export GOROOT="/usr/local/go"
export GOPATH="$HOME/go"
export GO111MODULE="auto"

export RIPGREP_CONFIG_PATH="$HOME/.ripgreprc"

GOPATHS="$GOPATH/bin:$GOROOT/bin"
LOCALPATHS="$HOME/bin:$HOME/.bin:$HOME/.local/bin:/usr/local/bin"
NPMPATHS="$NPM_PACKAGES/bin"
PERLPATHS="$HOME/perl5/perlbrew/bin"
RUBYPATHS="$HOME/.rvm/bin"
RUSTPATHS="$HOME/.cargo/bin"
CIQPATHS="$HOME/.connectiq-sdk/bin"

# Keg-only formulas refusin to link for macOS-provided software.
BREWPATHS="/usr/local/opt/curl/bin"

export PATH="$CIQPATHS:$PYTHONPATHS:$RUSTPATHS:$GOPATHS:$PERLPATHS:$RUBYPATHS:$NPMPATHS:$LOCALPATHS:$BREWPATHS:$PATH"

# Init pyenv
[ "$(pyenv -v 2> /dev/null)" ] && eval "$(pyenv init -)"

# Source RVM last to make it apper first in PATH
[ -f "$HOME/.rvm/scripts/rvm" ] && . "$HOME/.rvm/scripts/rvm"

function set-java-version {
    case "$1" in
        8)
            version="jdk1.8.0_221.jdk"
            ;;
        12)
            version="jdk-12.0.2.jdk"
            ;;
        14)
            version="jdk-14.0.1.jdk"
            ;;
        *)
            version="jdk-14.0.1.jdk"
            ;;
    esac

    rm -f "$HOME/.bin/java"
    rm -f "$HOME/.bin/javac"
    JAVA_VERSION=${1:-jdk1.8.0_221.jdk}

    ln -s "/Library/Java/JavaVirtualMachines/${JAVA_VERSION}/Contents/Home/bin/java" "$HOME/.bin/java"
    ln -s "/Library/Java/JavaVirtualMachines/${JAVA_VERSION}/Contents/Home/bin/javac" "$HOME/.bin/javac"
}

function rr {
    if [ -f "/var/run/reboot-required" ]; then
        echo "Reboot required!!";
    else
        echo "No reboot needed";
    fi
}

function container_ip {
    docker inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}" "${1:-}"
}

function weather {
    curl "http://wttr.in/${1:-stockholm}"
}

# vim: set ft=zsh:
